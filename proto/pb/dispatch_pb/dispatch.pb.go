// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: dispatch.proto

package dispatch_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DingMType int32

const (
	DingMType_Text     DingMType = 0
	DingMType_Link     DingMType = 2
	DingMType_Markdown DingMType = 3
)

// Enum value maps for DingMType.
var (
	DingMType_name = map[int32]string{
		0: "Text",
		2: "Link",
		3: "Markdown",
	}
	DingMType_value = map[string]int32{
		"Text":     0,
		"Link":     2,
		"Markdown": 3,
	}
)

func (x DingMType) Enum() *DingMType {
	p := new(DingMType)
	*p = x
	return p
}

func (x DingMType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DingMType) Descriptor() protoreflect.EnumDescriptor {
	return file_dispatch_proto_enumTypes[0].Descriptor()
}

func (DingMType) Type() protoreflect.EnumType {
	return &file_dispatch_proto_enumTypes[0]
}

func (x DingMType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DingMType.Descriptor instead.
func (DingMType) EnumDescriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{0}
}

type Bot int32

const (
	Bot_None     Bot = 0
	Bot_QQ       Bot = 1
	Bot_Wechat   Bot = 2
	Bot_Telegram Bot = 3
	Bot_Dingding Bot = 4
	Bot_Feishu   Bot = 5
)

// Enum value maps for Bot.
var (
	Bot_name = map[int32]string{
		0: "None",
		1: "QQ",
		2: "Wechat",
		3: "Telegram",
		4: "Dingding",
		5: "Feishu",
	}
	Bot_value = map[string]int32{
		"None":     0,
		"QQ":       1,
		"Wechat":   2,
		"Telegram": 3,
		"Dingding": 4,
		"Feishu":   5,
	}
)

func (x Bot) Enum() *Bot {
	p := new(Bot)
	*p = x
	return p
}

func (x Bot) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bot) Descriptor() protoreflect.EnumDescriptor {
	return file_dispatch_proto_enumTypes[1].Descriptor()
}

func (Bot) Type() protoreflect.EnumType {
	return &file_dispatch_proto_enumTypes[1]
}

func (x Bot) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bot.Descriptor instead.
func (Bot) EnumDescriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{1}
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Success      bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{0}
}

func (x *Resp) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Resp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *MetaMessage     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Qq       *QQMessage       `protobuf:"bytes,2,opt,name=qq,proto3" json:"qq,omitempty"`
	Dingding *DingdingMessage `protobuf:"bytes,3,opt,name=dingding,proto3" json:"dingding,omitempty"`
	T        Bot              `protobuf:"varint,4,opt,name=t,proto3,enum=proto.Bot" json:"t,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetMeta() *MetaMessage {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Message) GetQq() *QQMessage {
	if x != nil {
		return x.Qq
	}
	return nil
}

func (x *Message) GetDingding() *DingdingMessage {
	if x != nil {
		return x.Dingding
	}
	return nil
}

func (x *Message) GetT() Bot {
	if x != nil {
		return x.T
	}
	return Bot_None
}

type MetaMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content      string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ReferenceUrl string `protobuf:"bytes,4,opt,name=reference_url,json=referenceUrl,proto3" json:"reference_url,omitempty"`
}

func (x *MetaMessage) Reset() {
	*x = MetaMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaMessage) ProtoMessage() {}

func (x *MetaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaMessage.ProtoReflect.Descriptor instead.
func (*MetaMessage) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{2}
}

func (x *MetaMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MetaMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MetaMessage) GetReferenceUrl() string {
	if x != nil {
		return x.ReferenceUrl
	}
	return ""
}

type QQMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat  int64 `protobuf:"varint,1,opt,name=chat,proto3" json:"chat,omitempty"`
	Group bool  `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *QQMessage) Reset() {
	*x = QQMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQMessage) ProtoMessage() {}

func (x *QQMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQMessage.ProtoReflect.Descriptor instead.
func (*QQMessage) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{3}
}

func (x *QQMessage) GetChat() int64 {
	if x != nil {
		return x.Chat
	}
	return 0
}

func (x *QQMessage) GetGroup() bool {
	if x != nil {
		return x.Group
	}
	return false
}

type DingdingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string    `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Mt          DingMType `protobuf:"varint,2,opt,name=mt,proto3,enum=proto.DingMType" json:"mt,omitempty"`
}

func (x *DingdingMessage) Reset() {
	*x = DingdingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DingdingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DingdingMessage) ProtoMessage() {}

func (x *DingdingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DingdingMessage.ProtoReflect.Descriptor instead.
func (*DingdingMessage) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{4}
}

func (x *DingdingMessage) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DingdingMessage) GetMt() DingMType {
	if x != nil {
		return x.Mt
	}
	return DingMType_Text
}

var File_dispatch_proto protoreflect.FileDescriptor

var file_dispatch_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x51, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x02, 0x71, 0x71, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x64, 0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x74, 0x52,
	0x01, 0x74, 0x22, 0x62, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x35, 0x0a, 0x09, 0x51, 0x51, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x55, 0x0a,
	0x0f, 0x44, 0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x02, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x6e, 0x67, 0x4d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x02, 0x6d, 0x74, 0x2a, 0x2d, 0x0a, 0x09, 0x44, 0x69, 0x6e, 0x67, 0x4d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x69, 0x6e, 0x6b, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x10, 0x03, 0x2a, 0x4b, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x51, 0x51, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x6e, 0x67, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x69, 0x73, 0x68, 0x75, 0x10, 0x05,
	0x32, 0x36, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x1a, 0x5a, 0x18, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dispatch_proto_rawDescOnce sync.Once
	file_dispatch_proto_rawDescData = file_dispatch_proto_rawDesc
)

func file_dispatch_proto_rawDescGZIP() []byte {
	file_dispatch_proto_rawDescOnce.Do(func() {
		file_dispatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_dispatch_proto_rawDescData)
	})
	return file_dispatch_proto_rawDescData
}

var file_dispatch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dispatch_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dispatch_proto_goTypes = []interface{}{
	(DingMType)(0),          // 0: proto.DingMType
	(Bot)(0),                // 1: proto.Bot
	(*Resp)(nil),            // 2: proto.Resp
	(*Message)(nil),         // 3: proto.Message
	(*MetaMessage)(nil),     // 4: proto.MetaMessage
	(*QQMessage)(nil),       // 5: proto.QQMessage
	(*DingdingMessage)(nil), // 6: proto.DingdingMessage
}
var file_dispatch_proto_depIdxs = []int32{
	4, // 0: proto.Message.meta:type_name -> proto.MetaMessage
	5, // 1: proto.Message.qq:type_name -> proto.QQMessage
	6, // 2: proto.Message.dingding:type_name -> proto.DingdingMessage
	1, // 3: proto.Message.t:type_name -> proto.Bot
	0, // 4: proto.DingdingMessage.mt:type_name -> proto.DingMType
	3, // 5: proto.DispatchService.Push:input_type -> proto.Message
	2, // 6: proto.DispatchService.Push:output_type -> proto.Resp
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_dispatch_proto_init() }
func file_dispatch_proto_init() {
	if File_dispatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dispatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DingdingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dispatch_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dispatch_proto_goTypes,
		DependencyIndexes: file_dispatch_proto_depIdxs,
		EnumInfos:         file_dispatch_proto_enumTypes,
		MessageInfos:      file_dispatch_proto_msgTypes,
	}.Build()
	File_dispatch_proto = out.File
	file_dispatch_proto_rawDesc = nil
	file_dispatch_proto_goTypes = nil
	file_dispatch_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DispatchServiceClient is the client API for DispatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DispatchServiceClient interface {
	Push(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Resp, error)
}

type dispatchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDispatchServiceClient(cc grpc.ClientConnInterface) DispatchServiceClient {
	return &dispatchServiceClient{cc}
}

func (c *dispatchServiceClient) Push(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.DispatchService/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DispatchServiceServer is the server API for DispatchService service.
type DispatchServiceServer interface {
	Push(context.Context, *Message) (*Resp, error)
}

// UnimplementedDispatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDispatchServiceServer struct {
}

func (*UnimplementedDispatchServiceServer) Push(context.Context, *Message) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}

func RegisterDispatchServiceServer(s *grpc.Server, srv DispatchServiceServer) {
	s.RegisterService(&_DispatchService_serviceDesc, srv)
}

func _DispatchService_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServiceServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DispatchService/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServiceServer).Push(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _DispatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DispatchService",
	HandlerType: (*DispatchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _DispatchService_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dispatch.proto",
}
